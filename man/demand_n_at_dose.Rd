% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/demand_n_at_dose.R
\name{demand_n_at_dose}
\alias{demand_n_at_dose}
\title{Demand there are n patients at a dose before condisdering stopping.}
\usage{
demand_n_at_dose(parent_selector_factory, n, dose)
}
\arguments{
\item{parent_selector_factory}{Object of type \code{\link{selector_factory}}.}

\item{n}{Continue at least until there are n at a dose.}

\item{dose}{\code{'any'} to continue until there are n at any dose;
\code{'recommended'} to continue until there are n at the recommended dose;
or an integer to continue until there are n at a particular dose-level.}
}
\value{
an object of type \code{\link{selector_factory}} that can fit a
dose-finding model to outcomes.
}
\description{
This method continues a dose-finding trial until there are n patients at a
dose. Once that condition is met, it delegates stopping responsibility to its
parent dose selector, whatever that might be. This class is greedy in that it
meets its own needs before asking any other selectors in a chain what they
want. Thus, different behaviours may be achieved by nesting dose selectors
in different orders. See examples.
}
\examples{
skeleton <- c(0.05, 0.1, 0.25, 0.4, 0.6)
target <- 0.25
model1 <- get_dfcrm(skeleton, target) \%>\%
  demand_n_at_dose(n = 9, dose = 'any')

model1 \%>\% fit('1NNT 1NNN 2TNN 2NNN') \%>\% continue()
# This tells you to continue because there is no selector considering when
# you should stop - dfcrm implements no stopping rule by default.

# In contrast:
model2 <- get_dfcrm(skeleton, target) \%>\%
  stop_at_n(n = 12)
model3 <- get_dfcrm(skeleton, target) \%>\%
  stop_at_n(n = 12) \%>\%
  demand_n_at_dose(n = 9, dose = 'any')

model2 \%>\% fit('1NNN 1NNN 2TNN 2NNN') \%>\% continue()
model3 \%>\% fit('1NNN 1NNN 2TNN 2NNN') \%>\% continue()
# Now model2 tells you to stop but model3 tells you to continue because 9
# have not been seen at any dose yet.
}
